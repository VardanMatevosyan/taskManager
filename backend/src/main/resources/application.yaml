#security:
#  oauth2:
#    resource:
#      userInfoUri: http://localhost:8080/userInfo
#server:
#  port: 9090
  spring:
    datasource:
      url: jdbc:sqlserver://localhost;databaseName=taskManager?useSSL=false
      username: vmatevosian
      password: vmatevosian

    jpa:
      show-sql: true
      hibernate:
        ddl-auto: update
        naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      properties:
        hibernate:
          dialect: org.hibernate.dialect.SQLServerDriver
    security:
      oauth2:
        client:
          registration:
#            google:
#              clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
#              clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
#              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - email
#                - profile
            facebook:
              clientId: 422768198624262
              clientSecret: 556e0f3dad7c40efe63e54cc4605bc8f
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
#            github:
#              clientId: d3e47fc2ddd966fa4352
#              clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
#              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - user:email
#                - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
  app:
    auth:
      tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
      tokenExpirationMsec: 864000000
    oauth2:
      # After successfully authenticating with the OAuth2 Provider,
      # we'll be generating an auth token for the user and sending the token to the
      # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
      # We're not using cookies because they won't work well in mobile clients.
      authorizedRedirectUris:
        - http://localhost:8080/oauth2/redirect
        - myandroidapp://oauth2/redirect
        - myiosapp://oauth2/redirect